{
  "author": "Jean P. May, Jr.",
  "gitHubUrl": "https://github.com/thebearmay/hubitat",
  "packages": [
    {
      "id": "812cb3c9-3b67-47f4-aac2-05dc85e0e505",
      "name": "Notification Tile Device",
      "category": "Convenience",
      "location": "https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/notifyTileManifest.json",
      "description": "Device driver that can serve as a destination for notifications. Formats the notifications for display on an attribute tile.",
      "tags": [
        "Misc. Devices"
      ]
    },
    {
      "id": "92d8e87a-595e-479c-8dca-59a9d0925eb6",
      "name": "Dashboard Variable Device",
      "category": "Integrations",
      "location": "https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/dashVariableManifest.json",
      "description": "This is a psuedo Global Variable Connector that works with RM or webCoRE to provide a bi-directional interface to the Variable Tile.  Was written primarily to give webCoRE users a method of working with the variable tile without requiring the creation of an RM global variable and connector.",
      "tags": [
        "Misc. Devices"
      ]
    },
    {
      "id": "dc44dda5-e732-4c3d-9eea-f4efec8f7d3f",
      "name": "Hubitat Ping Device",
      "category": "Integrations",
      "location": "https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/hubPingManifest.json",
      "description": "Device driver that provides a wrapper for the Hubitat Ping endpoint.  sendPing command accepts an IPv4 sring and will send it to the hub, which will do 5 ICMP requests.  Optionally, can be set through the preferences to repeat the ping command on a specified interval.  Returns: percentLoss, avg, min, max, mdev, pingReturn, and presence.  Implements capabilities Acutator, Configuration, and Presence.",
      "tags": [
        "Misc. Devices"
      ]
    },
    {
      "id": "70b5f419-c511-4614-811d-f90b302a3d8a",
      "name": "Device Details Display",
      "category": "Convenience",
      "location": "https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/devCharManifest.json",
      "description": "Simple application that displays the capabilities, attributes (summary and detail, commands (summary and detail) and device data for devices selected.  Allows for the quick comparison of multiple devices.",
      "tags": [
        "Misc. Devices"
      ]
    },
    {
      "id": "6c2681e0-747f-45fc-8c14-1ccb86111f93",
      "name": "Moon Phase Device",
      "category": "Convenience",
      "location": "https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/moonPhaseManifest.json",
      "description": "Device driver to calculate the moon phase for a given or current date/time.  Attributes include a moon phase text string, the a moon phase number (percentage, in decimal format, that the given time/date is through the lunar cycle, and a generated tile string.  Driver optionally will automatically update the attributes at 1 second past midnight to keep the phase current, and allows for an path to an alternate set of tile icons (i.e. hub file system - http://hubIpAddress/local/)."
    },
    {
      "id": "4da817ab-24c2-4d67-90f6-58d6247aef38",
      "name": "Even Day Switch",
      "category": "Convenience",
      "location": "https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/evenDaySwitchManifest.json",
      "description": "Device driver creates a virtual switch that is set on/off based on whether the day of the year is even or odd. To handle end of year processing the driver can optionally switch the even/odd on/off to ensure that the every other day on/off is maintained."
    },
    {
      "id": "4375e6be-7dc0-4770-8779-ef3420823db4",
      "name": "Hubitat Hub Information Driver Aggregation",
      "category": "Convenience",
      "location": "https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/hubInfoAggManifest.json",
      "description": "Application allows multiple instances of the Hub Information Driver to be displayed in one space. Also permits the creation of a customized html attribute that can be displayed on a dashboard attribute tile."
    },
    {
      "id": "1e09b985-03b7-4cdc-96dc-2b2e6586a8df",
      "name": "Hub Monitor",
      "category": "Convenience",
      "location": "https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/hubMonitorManifest.json",
      "description": "Application allows monitoring of multiple instances of the Hub Information Driver, and will generate notifications for temperature, database size, free memory and IP address changes.",
      "tags": [
        "Monitoring"
      ]
    },
    {
      "id": "14eb07f4-b7e6-4d4d-82f8-120290661d46",
      "name": "Hub Variable Sync",
      "category": "Convenience",
      "location": "https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/hubVarSyncManifest.json",
      "description": "Application allows the synchronization of hub variables across multiple hubs."
    },
    {
      "id": "be3bd1e2-30c4-4b11-a276-5ea0c166f5f0",
      "name": "Custom Device Note",
      "category": "Convenience",
      "location": "https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/custDevNoteManifest.json",
      "description": "Application allows for the addition of custom notes to devices in the Data section under the Device Details on the device page."
    },
    {
      "id": "489588bc-e3e8-4245-910e-57d02f82fc69",
      "name": "SynAccess PDU Driver",
      "category": "Control",
      "location": "https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/synPduManifest.json",
      "description": "Driver that supports the usage of a SynAccess PDU through the telnet interface.  Driver creates a child device for each outlet to enable individual power control."
    },
    {
      "id": "a00635c2-21fe-41f5-bb8a-5cf146f0b129",
      "name": "Device Data Item Display",
      "category": "Utility",
      "location": "https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/devDatDManifest.json",
      "description": "Provides a mechanism for displaying data item values across multiple devices."
    },
    {
      "id": "dba69af4-3215-4b19-a344-735488b348f0",
      "name": "File Manager Device",
      "category": "Utility",
      "location": "https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/fileMgrManifest.json",
      "description": "Device Driver to allow reading, writing, and appending of text based files in Hubitat\\'s Local File Manager."
    },
    {
      "id": "f26defed-d4a6-4c4a-a37c-eca001ccea7b",
      "name": "Web Scraper Device",
      "category": "Utility",
      "location": "https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/webScrapeManifest.json",
      "description": "Scrapes a web site for a search string and returns data based on offset of the search.  Can be run as a one time or a periodic search"
    },
    {
      "id": "4e5e5aa6-2495-4826-b4d5-43543b30922d",
      "name": "File Manager for Extended Character Sets",
      "category": "Integrations",
      "location": "https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/fmExtManifest.json",
      "description": "Provides File Manager support for text files containing extended character sets."
    },
    {
      "id": "5666d457-3fe4-4b56-aff7-b0b42a18e6c7",
      "name": "Device Data Editor",
      "category": "Utility",
      "location": "https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/devDataEdtManifest.json",
      "description": "Quick Editor for the items in the Data area on the Device Page.  Also permits the addition of new items into the data section."
    },
    {
      "id": "20ec27d1-afff-4736-be9f-837e0913c7a2",
      "name": "Daily Reminder",
      "category": "Utility",
      "location": "https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/dlyReminderManifest.json",
      "description": "App uses a simple text file as input to generate daily reminder notices."
    },
    {
      "id": "979423db-2189-470d-a65a-89a661c620c7",
      "name": "Tile Template Generator",
      "category": "Utility",
      "location": "https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/ttGenManifest.json",
      "description": "Creates a template file based on a device driver's exposed attributes. Templates can be used to create dashboard tiles using Tile Template Device Manager."
    },
    {
      "id": "96fae9d6-e7a1-4814-a801-b95c91187f82",
      "name": "Tile Template Device Manager",
      "category": "Utility",
      "location": "https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/ttDevMgrManifest.json",
      "description": "Manages the merging of data from a device driver, and an assigned template to create an HTML output attribute that can be used on the Dashboard."
    },
    {
      "id": "b3fdaf31-e201-492e-84f0-379a6c37a624",
      "name": "Tile Multi-Device Template Manager",
      "category": "Utility",
      "location": "https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/ttMultDevMgrManifest.json",
      "description": "Manages the merging of data from multiple device drivers, and an assigned template to create an HTML output attribute that can be used on the Dashboard."
    },
    {
      "id": "f16a5566-4388-4431-bef1-cefb079cb7c1",
      "name": "Nexia Thermostat Manager",
      "category": "Utility",
      "location": "https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/nexiaThermManifest.json",
      "description": "Port of the ST Nexia Thermostat Manager.  Known work with the XL850 and XL824 Thermostat; may work with any thermostat running off of the TraneHome.com cloud."
    },
    {
      "id": "b81ff898-9642-45e0-a750-36ce50a43ce6",
      "name": "Danfoss Ally Master",
      "category": "Utility",
      "location": "https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/danfossAllyManifest.json",
      "description": "Provides integration with the Danfoss Ally Thermostats and Room Sensors."
    },
    {
      "id": "1acee6d9-61fb-4640-82eb-02f7537d78e8",
      "name": "Advanced Honeywell T6 Pro",
      "category": "Utility",
      "location": "https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/honeywellT6PManifest.json",
      "description": "Advanced driver for the Honeywell T6 Pro Z-Wave thermostat - the baseline code is from v1.2 bcopeland driver.  Provides access to all 42 device parameters, Clock synchronization, and Power Source Monitoring, in addition to the standard thermostat functions"
    },
    {
      "id": "edc910d9-34f5-4f08-b584-4574598f9834",
      "name": "Air Things View Plus API Integration",
      "category": "Utility",
      "location": "https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/airThingsManifest.json",
      "description": "Provides the interface and device(s) to integrate the Air Things (aka AirThings) View Plus hub and sensors with Hubitat(TM)."
    },
    {
      "id":"6ebe30ae-0cfd-42cb-bfac-dc13309eb914",
      "name":"HPM Manifest Generator",
      "category":"Utility",
      "location":"https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/hpmManGenManifest.json",
      "description":"Developers utility that automates the generation of an HPM Manifest, and the merge entry for the Repository.  "
    },
    {
      "id":"b08d7f15-470a-442e-86ce-0f9408c1c6bf",
      "name":"Hub Failover Manager",
      "category":"Utility",
      "location":"https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/hubFailoverManifest.json",
      "description":"Hubitat® Elevation Higher Availability (HE-Ha)  For homes where automation of the environment has become the expected condition it is highly disruptive when a key component fails. In the Hubitat® environment, the loss of the hub is significant, and while the Hub Protection service provides for a replacement hub and permits restoration of the hub’s data and radios there is a delay before the restoration can occur due to shipping. In the ideal world, a secondary hub would be on hot standby and would automatically assume control of the environment if it detected a failure (loss of communication in the primary hub).",
      "tags":[
        "Monitoring",
        "Safety & Security",
        "Tools & Utilities"
       ]
    },
    {
      "id":"2bcff027-0fdb-4ad8-9e3d-ba8b12c1ac95",
      "name":"Zigbee-ZWave Radio Toggle Buttons",
      "category":"Control",
      "location":"https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/zbZwToggleManifest.json",
      "description":"Provides a set of buttons to enable/disable the Zigbee/ZWave radios.",
      "tags":[
        "Buttons",
        "Zigbee",
        "ZWave"
       ]
    },
    {
      "id":"a0251230-0a94-4a13-8e71-fb120d9b6788",
      "name":"Message Rotator Tile Device",
      "category":"Utility",
      "location":"https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/msgRotateManifest.json",
      "description":"Message Rotator Tile device allows for multiple messages to be stored via RM, webCoRE, manually, etc. and then rotated to display on an attribute tile.",
      "tags":[
        "Dashboards"
       ]
    },
    {
      "id":"a63409d4-5bb1-4024-ba03-05344ce61696",
      "name":"Room Information Device",
      "category":"Utility",
      "location":"https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/roomInfoManifest.json",
      "description":"Provides a JSON summary of all Rooms and their associated devices and images."
    },
    {
      "id":"b2af0b32-74c4-473a-ac91-69b95a9d3307",
      "name":"Hub Information Driver v3",
      "category":"Utility",
      "location":"https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/hubInfoV3Manifest.json",
      "description":"Rewrite of the original Hub Information Driver.  Driver includes 40+ attributes related to the operation and general fitness of the hub.",
      "tags":[
        "Dashboards",
        "Misc. Devices",
        "Monitoring",
        "Tools & Utilities"
       ]
    },
    {
      "id":"f75a7ab6-64b1-46b7-9c6c-662b0be9b015",
      "name":"File Manager Backup & Restore",
      "category":"Utility",
      "location":"https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/fmBckResManifest.json",
      "description":"Allows for the creation and restore of a compressed backup of all files contained in the Hub's local File Manager ",
      "tags":[
        "Tools & Utilities"
       ]
    },
    {
      "id":"8ca1acc6-888d-477f-8856-2ddef0f06a2c",
      "name":"Power Outage Manager",
      "category":"Utility",
      "location":"https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/powOutMgrManifest.json",
      "description":"Monitors devices with Power Source capability and initiates actions when the powerSource attribute switches from battery to mains indicating a power outage.  Can also initiate actions when power is restored.",
      "tags":[
        "Monitoring"
       ]
    },
    {
      "id":"6fcd0f87-848b-4fc7-a0e4-209cf0fb7762",
      "name":"Node Red Server Information Driver",
      "category":"Utility",
      "location":"https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/nrServerInfoManifest.json",
      "description":"Node Red Server Information Driver creates a virtual device to accept and store input from node-red-contrib-device-stat, node-red-contrib-cpu.  ",
      "tags":[
        "Dashboards",
        "Misc. Devices"
       ]
    },
    {
      "id":"dfd717fd-bb02-4e32-bf65-3a43a57a8556",
      "name":"Sensor Groups+ (Resurrected)",
      "category":"Utility",
      "location":"https://raw.githubusercontent.com/thebearmay/SensorGroupsPlus/main/SensorGroupsPlus.json",
      "description":"App for grouping sensors",
      "tags":[
        "Automations & Groups",
        "Multi Sensors",
        "Tools & Utilities"
       ]
    },
    {
      "id":"69a499bc-f667-4092-a1dd-ec210cb221e6",
      "name":"Hubitat Log Display Tile",
      "category":"Notifications",
      "location":"https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/logTileManifest.json",
      "description":"Creates a dashboard tile to display Hubitat Log information",
      "tags":[
        "Dashboards"
       ]
    },
    {
      "id":"dbafc780-234d-4ef8-b01e-62b639559bd1",
      "name":"Device Attribute Iterative Storage ",
      "category":"Utility",
      "location":"https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/devAttIterStoManifest.json",
      "description":"Maintains a set number of iterations of attribute and computed min/max/avg values in the Hubitat Local File Manager.",
      "tags":[
        "Monitoring",
        "Tools & Utilities"
       ]
    },
    {
      "id":"e4856d8f-faa8-4d85-9772-72901167fef6",
      "name":"CSV Visualization",
      "category":"Utility",
      "location":"https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/csvVisualManifest.json",
      "description":"CSV Visualization - Local graphing of CSV files uitlizing the chart.js library"
    },
    {
      "id":"d20fd665-34ca-42f6-bbc9-866eb862cfca",
      "name":"Hub Image Proxy",
      "category":"Utility",
      "location":"https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/hubProxyManifest.json",
      "description":"Serves files from the hub File Manager, thus permitting images and text files on the hub to be viewed//referenced via the cloud interface."
    },
    {
      "id":"4c231540-9ff4-4a64-b067-8df2c0781f3c",
      "name":"Hub Updater v2",
      "category":"Utility",
      "location":"https://raw.githubusercontent.com/thebearmay/hubitat/main/manifests/hubUpdaterV2Manifest.json",
      "description":"Hub Updater v2 creates a virtual device that allows a single button push to request HE firmware updates for multiple HubMeshed hubs.",
      "tags":[
        "Misc. Devices"
       ]
    },
    {
      "id":"879b6db7-00c3-4a85-b66d-36c8d9b57d69",
      "name":"Govee Effect Player",
      "category":"Utility",
      "location":"https://raw.githubusercontent.com/thebearmay/hubitat/refs/heads/main/manifests/gEffectsManifest.json",
      "description":"Govee Effects Player",
      "tags":[
        "Lights & Switches"
       ]
    },
    {
      "id":"cc60b61f-0bda-4c83-a19d-5ce589ce6202",
      "name":"App and Device ID Logger",
      "category":"Utility",
      "location":"https://raw.githubusercontent.com/thebearmay/hubitat/refs/heads/main/manifests/appDevIdManifest.json",
      "description":"App and Device ID Logger. Application creates and updates a log of all app and device IDs and retains their entries after the app/device is removed; this allows for a quick lookup that can be used to trace the 'Hub received a request for an unknown app' messages. "
    },
    {
      "id":"cb995e0b-8a94-43d0-a888-7ffdb7f8484f",
      "name":"Rules Referencing Rules ",
      "category":"Utility",
      "location":"https://raw.githubusercontent.com/thebearmay/hubitat/refs/heads/main/manifests/ruleRruleManifest.json",
      "description":"Rules References Rules Table.  App generates 2 cross reference tables of Rule Machine Rules that reference other rules.  These views allow one to quickly identify a rule that calls other rules, or all of the rules that a specific rule is referenced in."
    },
    {
      "id":"4079be7f-a66d-4fea-bca8-6027ceb18ada",
      "name":"Hub Detailed Information Display",
      "category":"Utility",
      "location":"https://raw.githubusercontent.com/thebearmay/hubitat/refs/heads/main/manifests/hubInfoDispManifest.json",
      "description":"Hub Detailed Information Display - An app to combine the Hub Details page with information collected by the Hub Information Driver v3"
    },
    {
      "id":"593eb15c-367e-4987-b47b-817a5f00757d",
      "name":"Lock History",
      "category":"Utility",
      "location":"https://raw.githubusercontent.com/thebearmay/hubitat/refs/heads/main/manifests/lockHistManifest.json",
      "description":"Displays lock use history and allows the use of alternate names for lock codes (useful for fingerprint devices that report unknown) and lock device names"
    }
  ]
}
